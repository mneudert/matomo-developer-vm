Kernel.load(File.expand_path('./plugins/piwik.rb', @env.root_path))

chef_run_list  = ['recipe[piwik]']
config         = Piwik::Config.new
config_default = File.expand_path('./config.yml', @env.root_path)
config_local   = File.expand_path('./config.local.yml', @env.root_path)

config.parse_file(config_default) if File.exist?(config_default)
config.parse_file(config_local) if File.exist?(config_local)

command 'console',
    desc: 'Run a Piwik console command',
    parameters: { command: { optional: true } },
    script: %(cd /srv/piwik && ./console %{command})

command 'dump-export',
    desc: 'Dumps the piwik database currently used by the machine',
    script: %([ -d /vagrant/sqldumps ] || mkdir /vagrant/sqldumps;
              mysqldump \
                  -u#{config.get('mysql_username')} \
                  -p#{config.get('mysql_password')} \
                  #{config.get('mysql_database')} \
              > /vagrant/sqldumps/#{config.get('mysql_database')}.sql)

command 'dump-import',
    desc: 'Imports a recently created dump (from "dump-export")',
    script: %([ -f /vagrant/sqldumps/#{config.get('mysql_database')}.sql ] \
                  && mysql \
                         -u#{config.get('mysql_username')} \
                         -p#{config.get('mysql_password')} \
                         #{config.get('mysql_database')} \
                     < /vagrant/sqldumps/#{config.get('mysql_database')}.sql \
                  || true)

command 'mysql',
    desc: 'Opens a mysql console',
    script: %(mysql -u#{config.get('mysql_username')} -p#{config.get('mysql_password')} #{config.get('mysql_database')})

# device-detector specific commands
if File.directory?(File.expand_path(config.get('source_device_detector')))
    command 'dd-tests',
        desc: 'Run a device detector tests',
        parameters: {},
        script: %(cd /srv/device-detector && /srv/device-detector/vendor/bin/phpunit)

    command 'dd-parse',
        desc: 'Runs a device detection for given user agent',
        parameters: { agent: {} },
        script: %(cd /srv/device-detector && php misc/test.php '%{agent}')

    command 'dd-readme',
        desc: 'Generates device detector README report',
        parameters: {},
        script: %(cd /srv/device-detector && php misc/readme-report.php)
end
