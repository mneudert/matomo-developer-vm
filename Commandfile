Kernel.load(File.expand_path('./plugins/piwik.rb', @env.root_path))

config_file = File.expand_path('./config.rb', @env.root_path)
config      = Piwik::Config.new(config_file)

command 'console',
    desc: 'Run a Piwik console command',
    parameters: { command: { optional: true } },
    script: %(cd /srv/piwik && ./console %{command})

command 'dump-export',
    desc: 'Dumps the piwik database currently used by the machine',
    script: %([ -d /vagrant/sqldumps ] || mkdir /vagrant/sqldumps;
              mysqldump -upiwik -ppiwik piwik > /vagrant/sqldumps/piwik.sql)

command 'dump-import',
    desc: 'Imports a recently created dump (from "dump-export")',
    script: %([ -f /vagrant/sqldumps/piwik.sql ] \
                  && mysql -upiwik -ppiwik piwik < /vagrant/sqldumps/piwik.sql \
                  || true)

command 'mysql',
    desc: 'Opens a mysql console',
    script: %(mysql -upiwik -ppiwik piwik)

# device-detector specific commands
if File.directory?(File.expand_path(config.source_device_detector))
    command 'dd-tests',
        desc: 'Run a device detector tests',
        parameters: {},
        script: %(cd /srv/device-detector && /srv/device-detector/vendor/bin/phpunit)

    command 'dd-parse',
        desc: 'Runs a device detection for given user agent',
        parameters: { agent: {} },
        script: %(cd /srv/device-detector && php misc/test.php '%{agent}')

    command 'dd-readme',
        desc: 'Generates device detector README report',
        parameters: {},
        script: %(cd /srv/device-detector && php misc/readme-report.php)
end
